@model ExamSoft.Presentation.ViewModels.StudentListViewModel
@{
    ViewData["Title"] = "Şagirdlər";
}

<div class="text-center">
    <button type="button" class="btn btn-primary float-end" onclick="OpenModal(0)">Yeni Şagird</button>
    
    <table>
        <thead>
        <tr>
            <th>Adı</th>
            <th>Soyadı</th>
            <th>Nömrəsi</th>
            <th>Sinifi</th>
            <th></th>

        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.List)
        {
            <tr>
                <td>@item.Name</td>
                <td>@item.SurName</td>
                <td>@item.Number</td>
                <td>@item.Class</td>
                <td>
                    <button type="button" class="btn btn-primary me-2" onclick="OpenModal(@item.Id)">
                            <i class="bi bi-pencil"></i> Redaktə et
                        </button>
                        
                        <button type="button" class="btn btn-danger" onclick="Delete(@item.Id)" > 
                            <i class="bi bi-trash"></i> Sil
                        </button>
                </td>

            </tr>
        }
        </tbody>
    </table>
    
    <partial name="StudentPartial/_modal" model="Model.Request"/>

</div>

<script>
   
    document.getElementById('myModal').addEventListener('hidden.bs.modal', function () {
        location.reload();
    });

    function Delete(id) {
        Swal.fire({
            title: 'Silmək istədiyinizdən eminsinizmi ?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Sil',
            cancelButtonText: 'İmtina Et'
        }).then((result) => {
            if (result.isConfirmed) {
                fetch( '@Url.Action("Delete")' +'/'+id, { method: 'GET' })
                .then(response => {
                    if (response.ok) 
                       return response.json();
                    else 
                      showAlert('Xəta!','İstənməyən xəta meydana gəldi.', 'error' );
                })
                .then(data => {        
                   showAlert(data.title,data.text,data.icon);
                 })
                .catch(() => {
                    showAlert('Xəta!','İstənməyən xəta meydana gəldi.', 'error' );
                });
            }
        });
    }
    
    
    function OpenModal(id) {
        fetch(`@Url.Action("AddOrEdit")?id=${id}`)
            .then(response => response.text())
            .then(data => {
                document.getElementById('myModalBody').innerHTML = data;
                const editModal = new bootstrap.Modal(document.getElementById('myModal'));
                editModal.show();
            });
    }
    
    
function submitForm() {
        const formData = new FormData(document.getElementById('AddOrEditForm'));

        fetch('@Url.Action("AddOrEdit")', {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) { 
              showAlert(data.title,data.text,data.icon);
              location.reload();
            } else {
                showAlert(data.title,data.text,data.icon);
                //location.reload();
            }
        })
}

    
</script>